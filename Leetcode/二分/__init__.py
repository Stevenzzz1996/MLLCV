#!usr/bin/env python
# -*- coding:utf-8 -*-
# author: sfhong2020 time:2020/4/26 22:35

def func(N,K):
    res = []
    for i in range(N*K):
        for j in range(K):
            if i != j * N:
                res.append(i)
    print(res[k]+'\n')

T = int(input())
for i in range(T):
    N, K = [int(i) for i in input().split()]
    print(res[k]+'\n')
#
# 多多君最近在测试新的压缩算法，需要对N个数据块分别进行压缩（编号1~N）。
# 已知对于第i个数据块，读取压缩前的数据需要内存Ai，原地压缩后占用内存Bi（Ai
# >=Bi）。
# 而数据块之间相互独立，可以任意选择压缩的先后顺序。
# 多多君想知道，如果需要将所有数据都压缩后存放到内存中，最少需要多少内存才能满足要求。


# 多多君最近在研究新的一组特征函数：
# 给定两个正整数N和K，定义函数F（N，K），表示在正整数序列中，第K个不能被N整除的数字是多少。
# 现在多多君给出T组参数，需要你帮忙求出相应的答案。

# 多多君拼团购买了一组积木方块，其中有R块红色积木，G块绿色积木。
# |多多君准备用这些积木堆叠出一个金字塔，需要满足以下要求：
# 1.第i层恰好使用i个方块。
# 2.每层只能使用同一种颜色的积木。
# 3.尽可能的使用完所有积木。
# 例如，当R=4，G=6时，有两种符合条件的搭建方案：



