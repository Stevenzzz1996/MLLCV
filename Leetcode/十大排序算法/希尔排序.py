#!usr/bin/env python
# -*- coding:utf-8 -*-
# author: sfhong2020 time:2020/3/28 17:35

# （减小增量排序）
# 希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。但希尔排序是非稳定排序算法。
# 希尔排序的基本思想是：先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，
# 待整个序列中的记录"基本有序"时，再对全体记录进行依次直接插入排序。


def shell_sort(s):
    n = len(s)                         #列表长度
    gap = n // 2                       #初始步长设置为总长度的一半
    while gap >= 1:
        for i in range(n):
            j = i
            while j >= gap and s[j-gap] > s[j]:   #在每一组里面进行直接插入排序
                s[j], s[j-gap] = s[j-gap], s[j]
                j -= gap
        gap = gap//2                              #更新步长
    return s

nums = [1,2,3,4,7,5,6]
shell_sort(nums)
print(nums)
#希尔排序可以看作是一个冒泡排序或者插入排序的变形。
# 希尔排序在每次的排序的时候都把数组拆分成若干个序列，一个序列的相邻的元素索引相隔的固定的距离gap，
# 每一轮对这些序列进行冒泡或者插入排序，然后再缩小gap得到新的序列一一排序，直到gap为0

#比如对于数组[5,2,4,3,1,2]，第一轮gap=3拆分成[5,3]、[2,1]和[4,2]三个数组进行插入排序得到[3,1,2,5,2,4]；
# 第二轮gap=1，拆分成[3,2,2]和[1,5,4]进行插入排序得到[2,1,2,4,3,5]；最后gap=0，全局插入排序得到[1,2,2,3,4,5]

